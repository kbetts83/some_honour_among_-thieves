 #IT'SGOTTA BE SORTED IN THE RIGHT ORDER

                if wall.orientation == "wide":
                    door_collsion = sorted(door_collsion, key=lambda sprite: sprite.rect.x)


                 # door_collsion.reverse()
                if len (door_collsion) == 0:
                    wall_sprites.add (wall) # if it's empty, there's no collision, just make a door - works
                else:
                    for door_number, door in enumerate(door_collsion):
                        g = random.randint(1,200)
                        b = random.randint(1,200)
                        r = random.randint(1,200)
                        
                        if wall.orientation == 'wide':
                            wall_length = Wall.check_valid_wall(sprite.rect.left, door.rect.left)
                        else:
                            wall_length = Wall.check_valid_wall(sprite.rect.top, door.rect.top)

                        new_wall = Wall(wall_length, Map.wall_width, wall.rect.x, wall.rect.y)

                        new_wall.image.fill((r,g,b))
                        wall_sprites.add (new_wall)

                        final_door_check =  pygame.sprite.spritecollide(new_wall, door_sprites, False)
              
